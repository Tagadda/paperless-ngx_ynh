#:schema https://raw.githubusercontent.com/YunoHost/apps/master/schemas/manifest.v2.schema.json

packaging_format = 2

id = "paperless-ngx"
name = "Paperless-ngx"
description.en = "Scan, index and archive all your physical documents"
description.fr = "Scannez, triez et archivez tous vos documents papiers"

version = "2.13.5~ynh1"

maintainers = ["Tagada"]

[upstream]
license = "GPL-3.0-or-later"
website = "https://paperless-ngx.com"
demo = "https://demo.paperless-ngx.com/"
admindoc = "https://paperless-ngx.readthedocs.io/en/latest/index.html"
userdoc = "https://paperless-ngx.readthedocs.io/en/latest/usage_overview.html"
code = "https://github.com/paperless-ngx/paperless-ngx"

[integration]
yunohost = ">= 11.2.30"
architectures = "all"
multi_instance = true

ldap = false

sso = false

disk = "50M"
ram.build = "350M"
ram.runtime = "350M"

[install]
    [install.domain]
    type = "domain"

    [install.init_main_permission]
    type = "group"
    default = "all_users"

    [install.init_api_permission]
    ask.en = "Paperless-ngx API access list"
    type = "group"
    default = "visitors"

    [install.admin]
    type = "user"

    [install.admin_pw]
    ask.en = "Please chose a password for admin user."
    type = "password"

[resources]
    [resources.sources]

        [resources.sources.main]
        url = "https://github.com/paperless-ngx/paperless-ngx/releases/download/v2.13.5/paperless-ngx-v2.13.5.tar.xz"
        sha256 = "0aa8c511b6ea238200155d885b94c98db5c774332f87c632834681542201e78c"

        autoupdate.strategy = "latest_github_release"
        autoupdate.asset = "paperless-ngx-.*.tar.xz"

        [resources.sources.gs]
        url = "https://github.com/ArtifexSoftware/ghostpdl-downloads/releases/download/gs10021/ghostpdl-10.02.1.tar.gz"
        sha256 = "25399af0ef5bb94f2a13c91dc785c128d14f16744c4c92fa7c86e011c23151d8"

    [resources.system_user]
    # This will provision/deprovision a unix system user

    [resources.install_dir]
    # This will create/remove the install dir as /var/www/$app
    # and store the corresponding setting $install_dir

    [resources.data_dir]
    subdirs = ["consume", "data", "media", "imagemagick"]

    [resources.permissions]
    # This will configure SSOwat permission for $domain/$path/
    # The initial allowed group of user is configured via the init_main_permission question (public=visitors, private=all_users)
    main.url = "/"
    main.auth_header = false

    api.url = "/api/"
    api.show_tile = false
    api.auth_header = false

    share.url = "/share/"
    share.show_tile = false
    share.auth_header = false
    share.protected = true
    share.allowed = "visitors"

    [resources.ports]
    main.default = 8095

    [resources.apt]
    # This will automatically install/uninstall the following apt packages
    # and implicitly define the $phpversion setting as 8.0 (if phpX.Y-foobar dependencies are listed)
    packages = [
        "python3",
        "python3-pip",
        "python3-dev",
        "python3-venv",
        "default-libmysqlclient-dev",
        "fonts-liberation",
        "imagemagick",
        "gnupg",
        "libpq-dev",
        "libmagic-dev",
        "mime-support",
        "libzbar0",
        "poppler-utils",
        "postgresql",
        "postgresql-contrib",
        "unpaper",
        "ghostscript",
        "icc-profiles-free",
        "qpdf",
        "liblept5",
        "libxml2",
        "pngquant",
        "zlib1g",
        "tesseract-ocr",
        "libatlas-base-dev",
        "libxslt1-dev",
        "redis-server",
        "pkg-config",
        ]

    [resources.database]
    # This will automatically provision/deprovison a DB and store the corresponding credentials in settings $db_user, $db_name, $db_pwd
    type = "postgresql"
